{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","document","getElementById"],"mappings":"oMAceA,MAZFC,IAAyB,IAAxB,KAACC,EAAI,MAAEC,EAAK,GAAEC,GAAIH,EAC5B,OACII,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,EAAE,cACjDC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCcLQ,MAnBEV,IAAe,IAAd,OAACW,GAAOX,EACtB,OACAI,IAAAC,cAAA,WAEIM,EAAOC,IAAI,CAACC,EAAMC,IAEfV,IAAAC,cAACN,EAAI,CACAgB,IAAKD,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,WCElBc,MAbGhB,IAAkC,IAAjC,YAACiB,EAAW,aAAEC,GAAalB,EAC1C,OACII,IAAAC,cAAA,OAAKC,UAAW,OAChBF,IAAAC,cAAA,SACAC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCAHI,MARCC,GAERnB,IAAAC,cAAA,OAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,UAC/DJ,EAAMK,UCFnB,MAAMC,UAAsBC,YACxBC,YAAYR,GACRS,MAAMT,GACNU,KAAKC,MAAQ,CACTC,UAAU,GAIlBC,kBAAkBC,EAAOC,GACrBL,KAAKM,SAAS,CAACJ,UAAU,IAG7BK,SACI,OAAIP,KAAKC,MAAMC,SACJ/B,IAAAC,cAAA,UAAI,0BAER4B,KAAKV,MAAMK,UAIXC,Q,MCdf,MAAMY,UAAYX,YACdC,cACIC,QAAO,KAaXU,eAAkBC,IACdV,KAAKM,SAAS,CAACtB,YAAa0B,EAAMC,OAAOC,SAbzCZ,KAAKC,MAAO,CACRvB,OAAQ,GACRM,YAAa,IAIrB6B,oBACIC,MAAM,8CACLC,KAAKC,GAAUA,EAASC,QACxBF,KAAKG,GAASlB,KAAKM,SAAS,CAAE5B,OAAQwC,KAO3CX,SACI,MAAM,OAAE7B,EAAM,YAAEM,GAAgBgB,KAAKC,MAC/BkB,EAAiBzC,EAAO0C,OAAOC,GAC1BA,EAAMrD,KAAKsD,cAAcC,SAASvC,EAAYsC,gBAEzD,OAAQ5C,EAAO8C,OAGXrD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACW,EAAS,CAACE,aAAce,KAAKS,iBAC9BtC,IAAAC,cAACiB,EAAM,KACHlB,IAAAC,cAACwB,EAAa,KAClBzB,IAAAC,cAACK,EAAQ,CAACC,OAAQyC,OAPtBhD,IAAAC,cAAA,UAAI,eAkBDoC,Q,MC5CfiB,IAASlB,OAAOpC,IAAAC,cAACoC,EAAG,MAAKkB,SAASC,eAAe,U","file":"static/js/main.f6a0b77c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n    <div>\r\n        {\r\n        robots.map((user, i) => {\r\n         return (\r\n           <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n                 />\r\n              );\r\n          })\r\n      }   \r\n     </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className= 'pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots' \r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'5px solid black', height: '800px'}}> \r\n            {props.children}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>OOPS. That's not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state= {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value })\r\n     }\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ? \r\n            <h1>Loading...</h1> :\r\n    (\r\n            <div className='tc' >\r\n                <h1 className='f1'>FriendsRobo</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                <CardList robots={filteredRobots}/>\r\n                </ErrorBoundary>\r\n                </Scroll>\r\n                </div>\r\n    \r\n          );\r\n        }\r\n    }\r\n\r\n    \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}